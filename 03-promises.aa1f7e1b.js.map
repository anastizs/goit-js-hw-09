{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAO,C,SAAEL,E,MAAUC,GAEzB,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLP,EACFK,EAAQF,GAERG,EAAOH,EAAK,GAEbJ,EAAM,G,CA5CAS,SAASC,cAAc,SAM/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAEC,iBAEF,MAAMC,EAAaC,OAAOH,EAAEI,cAAchB,MAAMiB,OAC1CC,EAAYH,OAAOH,EAAEI,cAAcG,KAAKF,OACxCG,EAAcL,OAAOH,EAAEI,cAAcK,OAAOJ,QAKpD,SAA6BK,EAAOH,EAAME,GACxC,IAAK,IAAIE,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EAErDzB,EAAcyB,EAAUD,GACrBE,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAEzE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,MAAU,IAGzEsB,GAASH,C,CAdXW,CAAoBhB,EAAYI,EAAWE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n// const delay = form.querySelector('[name=\"delay\"]');\n// const step = form.querySelector('[name=\"step\"]');\n// const amount = form.querySelector('[name=\"amount\"]');\n\n\nform.addEventListener('submit', createPromiseBtn);\n\nfunction createPromiseBtn(e) {\n  e.preventDefault();\n\n  const delayValue = Number(e.currentTarget.delay.value);\n  const stepValue = Number(e.currentTarget.step.value);\n  const amountValue = Number(e.currentTarget.amount.value);\n\n  createPromiseAction(delayValue, stepValue, amountValue);\n};\n\nfunction createPromiseAction(delay, step, amount) {\n  for (let position = 1; position <= amount; position += 1) {\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    \n    delay += step;\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const data = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(data);\n      } else {\n        reject(data);\n      }\n    }, delay);\n  });\n};\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","data","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","delayValue","Number","currentTarget","value","stepValue","step","amountValue","amount","delay1","position1","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$createPromiseAction"],"version":3,"file":"03-promises.aa1f7e1b.js.map"}